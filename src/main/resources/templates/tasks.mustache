<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Title</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BmbxuPwQa2lc/FVzBcNJ7UAyJxM6wuqIj61tLrc4wSX0szH/Ev+nYRRuWlolflfl" crossorigin="anonymous">
</head>
<div class="container">
    <div class="row ">
        <div class="col">
            <h1>Tasks</h1>
        </div>
        <div class="col">
            <button class="btn btn-primary" onclick="addFunction()">Add</button>
        </div>
    </div>
</div>
<div class="container">
    <div class="row" id="tasksRow">
        {{#tasks}}
        <div class="col-sm-3" id="task_{{id}}">
            <div class="card">
                <div class="card-header">
                    Task #{{id}}
                </div>
                <div class="card-body">
                    <h5 class="card-title">{{title}}</h5>
                    <p class="card-text">{{#description}}{{description}}{{/description}}</p>
                    <button class="btn btn-primary" id="edit_{{id}}" data-id="{{id}}" data-bs-toggle="modal" data-bs-target="#editBackdrop" onclick="editFunction(this)">Edit</button>
                    <button class="btn btn-primary" id="delete_{{id}}" data-id="{{id}}" onclick="deleteFunction(this)">Delete</button>
                    <button class="btn {{#complete}}btn-success{{/complete}}{{^complete}}btn-primary{{/complete}}" id="complete_{{id}}" data-id="{{id}}" onclick="completeFunction(this)">{{#complete}}Uncomplete{{/complete}}{{^complete}}Complete{{/complete}}</button>
                </div>
            </div>
        </div>
        {{/tasks}}
    </div>
</div>
<footer>
    <script>
        function addFunction(o) {
            var dataNew = {
                "title" : "Task",
                "description" : "Description...",
                "complete" : false
            }
            ajax_post('/api/tasks', function (data) {

                if(data != null && data["id"]) {
                    window.location.reload();
                }
            }, dataNew);
        }

        function editFunction(o) {
            var id = o.getAttribute("data-id");
            ajax_get('/api/tasks/' + id, function(data) {
                if(data != null){
                    var form = document.getElementById("editForm");
                    console.log(form);
                }
            });
            console.log(o.getAttribute("data-id"));
        }

        function deleteFunction(o) {
            var id = o.getAttribute("data-id");

            ajax_delete('/api/tasks/' + id, function (data) {
                if(data["id"] !== null){
                    document.getElementById('task_' + data["id"]).outerHTML = "";
                }
                console.log(data);
            });

        }

        function completeFunction(o) {
            var id = o.getAttribute("data-id");

            ajax_get('/api/tasks/' + id, function(data) {
                data["complete"] = !data["complete"];
                ajax_put('/api/tasks/' + id, function (dataNew) {
                    if(dataNew !== null && data["complete"] == dataNew["complete"]){
                        var completeElem = document.getElementById('complete_' + dataNew["id"]);
                        completeElem.innerText = dataNew["complete"] ? "Uncomplete" : "Complete";
                        if(dataNew["complete"]){
                            completeElem.classList.remove("btn-primary");
                            completeElem.classList.add("btn-success");
                        } else {
                            completeElem.classList.remove("btn-success");
                            completeElem.classList.add("btn-primary");
                        }
                    }
                }, data);
                console.log(data);
            });
        }

        function ajax_get(url, callback) {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    console.log('responseText:' + xmlhttp.responseText);
                    try {
                        var data = JSON.parse(xmlhttp.responseText);
                    } catch(err) {
                        console.log(err.message + " in " + xmlhttp.responseText);
                        return;
                    }
                    callback(data);
                }
            };

            xmlhttp.open("GET", url, true);
            xmlhttp.send();
        }
        function ajax_post(url, callback, dataSend) {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                if (xmlhttp.readyState == 4 && xmlhttp.status == 201) {
                    console.log('responseText:' + xmlhttp.responseText);
                    try {
                        var data = JSON.parse(xmlhttp.responseText);
                    } catch(err) {
                        console.log(err.message + " in " + xmlhttp.responseText);
                        return;
                    }
                    callback(data);
                }
            };

            xmlhttp.open("POST", url, true);
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.send(JSON.stringify(dataSend));
        }

        function ajax_put(url, callback, dataSend) {
            var xmlhttp = new XMLHttpRequest();

            xmlhttp.onreadystatechange = function() {
                if (xmlhttp.readyState == 4 && xmlhttp.status == 202) {
                    console.log('responseText:' + xmlhttp.responseText);
                    try {
                        var data = JSON.parse(xmlhttp.responseText);
                    } catch(err) {
                        console.log(err.message + " in " + xmlhttp.responseText);
                        return;
                    }
                    callback(data);
                }
            };

            xmlhttp.open("PUT", url, true);
            xmlhttp.setRequestHeader("Content-Type", "application/json");
            xmlhttp.send(JSON.stringify(dataSend));
        }

        function ajax_delete(url, callback) {
            var xmlhttp = new XMLHttpRequest();
            xmlhttp.onreadystatechange = function() {
                if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                    console.log('responseText:' + xmlhttp.responseText);
                    try {
                        var data = JSON.parse(xmlhttp.responseText);
                    } catch(err) {
                        console.log(err.message + " in " + xmlhttp.responseText);
                        return;
                    }
                    callback(data);
                }
            };

            xmlhttp.open("DELETE", url, true);
            xmlhttp.send();
        }
    </script>
    <div class="modal fade" id="editBackdrop" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="staticBackdropLabel">Modal title</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                    <form id="editForm">
                        <div class="mb-3">
                            <label for="title" class="form-label">Title</label>
                            <input type="text" class="form-control" id="title">
                        </div>
                        <div class="mb-3">
                            <label for="description" class="form-label">Description</label>
                            <input type="textarea" class="form-control" id="description">
                        </div>
                        <div class="mb-3 form-check">
                            <input type="checkbox" class="form-check-input" id="complete">
                            <label class="form-check-label" for="complete">Task Complete</label>
                        </div>
                        <input type="hidden" id="id">
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" onclick="formSaveChanges(this)">Save</button>
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta2/dist/js/bootstrap.bundle.min.js" integrity="sha384-b5kHyXgcpbZJO/tY9Ul7kGkf1S0CWuKcCD38l8YkeH8z8QjE0GmW1gYU5S9FOnJ0" crossorigin="anonymous"></script>
</footer>
</body>
</html>